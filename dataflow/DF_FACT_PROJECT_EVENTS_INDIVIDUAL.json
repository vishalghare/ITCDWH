{
	"name": "DF_FACT_PROJECT_EVENTS_INDIVIDUAL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DWH_MART_STAGE",
						"type": "DatasetReference"
					},
					"name": "SrcAll"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_PROJECT",
						"type": "DatasetReference"
					},
					"name": "DIMPROJECT"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_CONTEXT_SUB_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMCONTEXTSUBTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_EVENT_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMEVENTTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_TRAINING_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMTRAININGTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_PLATFORM_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMPLATFORMTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_PARTICIPANT",
						"type": "DatasetReference"
					},
					"name": "DIMPARTICIPANT"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_PARTICIPANT",
						"type": "DatasetReference"
					},
					"name": "DIMPARTICIPANT01"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "DIMDATE01"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "DIMDATE02"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_GENDER",
						"type": "DatasetReference"
					},
					"name": "DIMGENDER"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "DATEOFBIRTHYEAR"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "DATEOFBIRTH2"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_COUNTRY",
						"type": "DatasetReference"
					},
					"name": "PARTICIPANTHOMECOUNTRY"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_ENTITY",
						"type": "DatasetReference"
					},
					"name": "DIMENTITY1"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_ENTITY",
						"type": "DatasetReference"
					},
					"name": "DIMENTITY2"
				},
				{
					"dataset": {
						"referenceName": "DIM_PROFESSIONAL_STATUS",
						"type": "DatasetReference"
					},
					"name": "DIMPROFESSIONALSTATUS"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_ENTITY_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMENTITYTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_ENTITY_SUB_TYPE",
						"type": "DatasetReference"
					},
					"name": "DIMENTITYSUBTYPE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_COUNTRY",
						"type": "DatasetReference"
					},
					"name": "ENTITYCOUNTRY"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_ENTITY_SIZE_GROUP",
						"type": "DatasetReference"
					},
					"name": "DIMENTITYSIZEGROUP"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_COURSE",
						"type": "DatasetReference"
					},
					"name": "DIMCOURSE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_AREA_OF_CHANGE",
						"type": "DatasetReference"
					},
					"name": "DIMAREAOFCHANGE"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_SERVICE_THEME",
						"type": "DatasetReference"
					},
					"name": "DIMSERVICETHEME01"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_SERVICE_THEME",
						"type": "DatasetReference"
					},
					"name": "DIMSERVICETHEME02"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_HS_CODES",
						"type": "DatasetReference"
					},
					"name": "DIMHSCODES"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_INT_STD_INDUSTRY_CODES_ISIC",
						"type": "DatasetReference"
					},
					"name": "DIMINTSTDINDUSTRYCODESISIC"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_GENDER",
						"type": "DatasetReference"
					},
					"name": "DIMTOPMANAGERGENDER"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_AGE_GROUP",
						"type": "DatasetReference"
					},
					"name": "TOPMANAGERAGEGROUP"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_AGE_GROUP",
						"type": "DatasetReference"
					},
					"name": "DIMAGEGROUP"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "CERTIFICATIONDAET"
				},
				{
					"dataset": {
						"referenceName": "MART_DIM_DATE",
						"type": "DatasetReference"
					},
					"name": "ENROLLDATE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DWH_STAGE_FOLDER",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DIMPROJECT01"
				},
				{
					"name": "DIMCONTEXTSUBTYPE01"
				},
				{
					"name": "DIMEVENTTYPE01"
				},
				{
					"name": "DerivedFACTCol"
				},
				{
					"name": "SelectReqCol"
				},
				{
					"name": "LkpPROJECT"
				},
				{
					"name": "LkpCONTEXT"
				},
				{
					"name": "LkpEVENTTYPE"
				},
				{
					"name": "DIMTRAININGTYPE01"
				},
				{
					"name": "LkpTRAININGTYPE"
				},
				{
					"name": "DIMPLATFORMTYPE01"
				},
				{
					"name": "LkpPLATFORMTYPE"
				},
				{
					"name": "LatestVersionPARTICIPANT"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DIMPARTICIPANTID"
				},
				{
					"name": "LkpPARTICIPANT"
				},
				{
					"name": "DATECOLLECTIONDATE"
				},
				{
					"name": "LkpDATECOLLECTIONDATE"
				},
				{
					"name": "DATESUBMISSON"
				},
				{
					"name": "LkpDATESUBMISSON"
				},
				{
					"name": "DIMPARTICIPANTSelect"
				},
				{
					"name": "DIMGENDER01"
				},
				{
					"name": "LkpGENDER"
				},
				{
					"name": "DATEOFBIRTHYEAR01"
				},
				{
					"name": "LkpDATEOFBIRTH"
				},
				{
					"name": "DATEOFBIRTH201"
				},
				{
					"name": "LkpDATEOFBIRTH2"
				},
				{
					"name": "LkpPARTICIPANTHOMECOUNTRY"
				},
				{
					"name": "PARTICIPANTHOMECOUNTRY01"
				},
				{
					"name": "LatestVersionENTITY"
				},
				{
					"name": "Join2"
				},
				{
					"name": "DIMENTITYSelect"
				},
				{
					"name": "LkpENTITY"
				},
				{
					"name": "DIMPROFESSIONALSTATUSSelect"
				},
				{
					"name": "LkpPROFESSIONALSTATUS"
				},
				{
					"name": "DIMENTITYTYPESelect"
				},
				{
					"name": "LkpDIMENTITYTYPE"
				},
				{
					"name": "LkpDIMENTITYSUBTYPE"
				},
				{
					"name": "DIMENTITYSUBTYPE01"
				},
				{
					"name": "ENTITYCOUNTRYSelect"
				},
				{
					"name": "ENTITYSIZEGROUPSelect"
				},
				{
					"name": "LkpENTITYSIZEGROUP"
				},
				{
					"name": "LkpCOURSE"
				},
				{
					"name": "DIMCOURSESelect"
				},
				{
					"name": "LkpAREAOFCHANGE"
				},
				{
					"name": "DIMAREAOFCHANGESelect"
				},
				{
					"name": "DIMSERVICETHEME0Select"
				},
				{
					"name": "DIMSERVICETHEME02Select"
				},
				{
					"name": "LkpSERVICETHEME01"
				},
				{
					"name": "LkpSERVICETHEME02"
				},
				{
					"name": "LkpHSCode"
				},
				{
					"name": "DIMHSCODESSelect"
				},
				{
					"name": "LkpISICCODE"
				},
				{
					"name": "DIMINTSTDINDUSTRYCODESISICSelect"
				},
				{
					"name": "DIMTOPMANAGERGENDERSelect"
				},
				{
					"name": "TOPMANAGERAGEGROUPSelect"
				},
				{
					"name": "DIMAGEGROUPSelect"
				},
				{
					"name": "CERTIFICATIONDATESelect"
				},
				{
					"name": "ENROLLDATESelect"
				},
				{
					"name": "LkpTOPMANAGERGENDER"
				},
				{
					"name": "LkpTOPMANAGERAGEGROUP"
				},
				{
					"name": "lkpAGEGROUP"
				},
				{
					"name": "LkpCERTIFICATIONDATE"
				},
				{
					"name": "LkpENROLLDATE"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tProjectID as string,\n\t\tContext as string,\n\t\t{Type of event} as string,\n\t\tEmail as string,\n\t\t{Phone number} as string,\n\t\t{Registration Date} as string,\n\t\t{Submission Date} as string,\n\t\t{Last name} as string,\n\t\t{Middle name} as string,\n\t\t{First name} as string,\n\t\tGender as string,\n\t\t{Year of birth} as string,\n\t\t{Date of birth} as string,\n\t\tCountry as string,\n\t\t{Organization/ Company name} as string,\n\t\t{Job title} as string,\n\t\t{Professional status} as string,\n\t\t{Type of entity} as string,\n\t\t{Sub-type of entity} as string,\n\t\tSize as string,\n\t\t{BSO ownership} as string,\n\t\t{Office Address} as string,\n\t\tCity as string,\n\t\t{Post Code} as string,\n\t\tWebsite as string,\n\t\tTwitter as string,\n\t\tLinkedIn as string,\n\t\t{Date of birth2} as string,\n\t\t{Country of Residence} as string,\n\t\tNationality as string,\n\t\tAddress as string,\n\t\tCityname as string,\n\t\tRegion as string,\n\t\t{Type of tool} as string,\n\t\t{Area of change} as string,\n\t\t{Service themes} as string,\n\t\t{Date of data collection} as string,\n\t\tid as string,\n\t\tCourse_name as string,\n\t\tUsername as string,\n\t\tTitle as string,\n\t\tidnumber as string,\n\t\tFunctional_title as string,\n\t\tHowlong as string,\n\t\tPriorexperience as string,\n\t\t{Country code} as string,\n\t\tPobox as string,\n\t\tPostalcode as string,\n\t\tSkype as string,\n\t\tAim as string,\n\t\tYahoo as string,\n\t\tMsn as string,\n\t\tProfile_field_Supervisor as string,\n\t\t{Service theme} as string,\n\t\tCityregion as string,\n\t\tCertification_date as string,\n\t\tCertified as string,\n\t\tCohort as string,\n\t\tUniqueid as string,\n\t\tUser_id as string,\n\t\tEnrol_time as string,\n\t\t{Type of platform} as string,\n\t\t{SheTrades Project} as string,\n\t\tISIC as string,\n\t\t{Please select the area of your activity} as string,\n\t\tHS as string,\n\t\t{Owner/ top manager gender} as string,\n\t\t{Owner/ top manager age} as string,\n\t\t{Type of training} as string,\n\t\t{Service theme 1} as string,\n\t\t{Service theme 2} as string,\n\t\tLocation as string,\n\t\t{Name of the entity} as string,\n\t\t{ISIC code division} as string,\n\t\t{HS 6 digit code (if available)} as string,\n\t\t{Account Name} as string,\n\t\t{English Name} as string,\n\t\tAcronym as string,\n\t\t{Account Type} as string,\n\t\t{Account Sub-Type} as string,\n\t\t{Office Address: Country} as string,\n\t\tCategory as string,\n\t\t{Parent Account} as string,\n\t\tConfidential as string,\n\t\tActivity as string,\n\t\tProduct as string,\n\t\t{Women Managed} as string,\n\t\t{Youth Managed} as string,\n\t\t{Social media} as string,\n\t\t{Other emails} as string,\n\t\t{Other phone numbers} as string,\n\t\t{Other information} as string,\n\t\t{Ownership and management} as string,\n\t\t{Trade Forum} as string,\n\t\t{Office Address: Street 1} as string,\n\t\t{Office Address: Street 2} as string,\n\t\t{Office Address: City} as string,\n\t\t{Office Address: State/Province} as string,\n\t\t{Office Address: ZIP/Postal Code} as string,\n\t\t{Mailing address is equal to office address} as string,\n\t\t{Mailing Address: Street 1} as string,\n\t\t{Mailing Address: Street 2} as string,\n\t\t{Mailing Address: City} as string,\n\t\t{Mailing Address: State/Province} as string,\n\t\t{Mailing Address: ZIP/Postal Code} as string,\n\t\t{Mailing Address: Country} as string,\n\t\t{UN Mailing Format} as string,\n\t\t{Project Number} as string,\n\t\tSalutation as string,\n\t\tAccount as string,\n\t\tPhone as string,\n\t\t{Preferred Language} as string,\n\t\t{Use account address} as string,\n\t\t{Event title} as string,\n\t\t{Event type} as string,\n\t\t{Course name} as string,\n\t\t{Start date} as string,\n\t\t{End date} as string,\n\t\t{Event date} as string,\n\t\t{SME Trade Academy} as string,\n\t\tSheTrades as string,\n\t\tFILE_NAME as string,\n\t\tLOAD_TIMESTAMP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SrcAll\nsource(output(\n\t\tPROJECT_SR_KEY as integer,\n\t\tPROJECT_ID as string,\n\t\tPROJECT_TITLE as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMPROJECT\nsource(output(\n\t\tCONTEXT_SUB_TYPE_SR_KEY as integer,\n\t\tCONTEXT_TYPE_CODE as string,\n\t\tCONTEXT_TYPE_DESC as string,\n\t\tCONTEXT_SUB_TYPE_CODE as string,\n\t\tCONTEXT_SUB_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMCONTEXTSUBTYPE\nsource(output(\n\t\tEVENT_TYPE_SR_KEY as integer,\n\t\tEVENT_TYPE_CODE as string,\n\t\tEVENT_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMEVENTTYPE\nsource(output(\n\t\tTRAINING_TYPE_SR_KEY as integer,\n\t\tTRAINING_TYPE_CODE as string,\n\t\tTRAINING_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMTRAININGTYPE\nsource(output(\n\t\tPLATFORM_TYPE_SR_KEY as integer,\n\t\tPLATFORM_TYPE_CODE as string,\n\t\tPLATFORM_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMPLATFORMTYPE\nsource(output(\n\t\tPARTICIPANT_SR_KEY as integer,\n\t\tPARTICIPANT_ID as integer,\n\t\tVERSION_NO as integer,\n\t\tEMAIL as string,\n\t\tLAST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tGENDER as string,\n\t\tYEAR_OF_BIRTH as integer,\n\t\tNATIONALITY as string,\n\t\tJOB_TITLE as string,\n\t\tADDRESS as string,\n\t\tID as string,\n\t\tUSERNAME as string,\n\t\tHOWLONG as string,\n\t\tPRIOR_EXPERIENCE as string,\n\t\tSALUTATION as string,\n\t\tCITY_NAME as string,\n\t\tPOBOX as string,\n\t\tPOST_CODE as string,\n\t\tSKYPE as string,\n\t\tAIM as string,\n\t\tYAHOO as string,\n\t\tMSN as string,\n\t\tCITY_REGION as string,\n\t\tOTHER_INFORMATION as string,\n\t\tOTHER_PHONE_NUMBERS as string,\n\t\tOTHER_EMAILS as string,\n\t\tSOCIAL_MEDIA as string,\n\t\tPREFERRED_LANGUAGE as string,\n\t\tCONFIDENTIAL as string,\n\t\tPHONE_NUMBER as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMPARTICIPANT\nsource(output(\n\t\tPARTICIPANT_SR_KEY as integer,\n\t\tPARTICIPANT_ID as integer,\n\t\tVERSION_NO as integer,\n\t\tEMAIL as string,\n\t\tLAST_NAME as string,\n\t\tMIDDLE_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tGENDER as string,\n\t\tYEAR_OF_BIRTH as integer,\n\t\tNATIONALITY as string,\n\t\tJOB_TITLE as string,\n\t\tADDRESS as string,\n\t\tID as string,\n\t\tUSERNAME as string,\n\t\tHOWLONG as string,\n\t\tPRIOR_EXPERIENCE as string,\n\t\tSALUTATION as string,\n\t\tCITY_NAME as string,\n\t\tPOBOX as string,\n\t\tPOST_CODE as string,\n\t\tSKYPE as string,\n\t\tAIM as string,\n\t\tYAHOO as string,\n\t\tMSN as string,\n\t\tCITY_REGION as string,\n\t\tOTHER_INFORMATION as string,\n\t\tOTHER_PHONE_NUMBERS as string,\n\t\tOTHER_EMAILS as string,\n\t\tSOCIAL_MEDIA as string,\n\t\tPREFERRED_LANGUAGE as string,\n\t\tCONFIDENTIAL as string,\n\t\tPHONE_NUMBER as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMPARTICIPANT01\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMDATE01\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMDATE02\nsource(output(\n\t\tGENDER_SR_KEY as integer,\n\t\tGENDER_CODE as string,\n\t\tGENDER_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMGENDER\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DATEOFBIRTHYEAR\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DATEOFBIRTH2\nsource(output(\n\t\tCOUNTRY_SR_KEY as integer,\n\t\tCOUNTRY_CODE as string,\n\t\tCOUNTRY_NAME_EN as string,\n\t\tCOUNTRY_NAME_ES as string,\n\t\tCOUNTRY_NAME_FR as string,\n\t\tISO2_CODE as string,\n\t\tISO3_CODE as string,\n\t\tLEAST_DEVELPED_COUNTRY as string,\n\t\tLAND_LCKD_DEVELOPING_COUNTRY as string,\n\t\tSMALL_ISLAND_DEVELOPING_STATES as string,\n\t\tDEVELOPED_DEVELOPING_COUNTRY as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> PARTICIPANTHOMECOUNTRY\nsource(output(\n\t\tENTITY_SR_KEY as integer,\n\t\tENTITY_ID as integer,\n\t\tVERSION_NO as integer,\n\t\tENTITY_NAME as string,\n\t\tENTITY_EMAIL_DOMAIN_NAME as string,\n\t\tADDRESS as string,\n\t\tCITY as string,\n\t\tREGION as string,\n\t\tPHONE_NUMBER as string,\n\t\tWEBSITE as string,\n\t\tTWITTER as string,\n\t\tLINKEDIN as string,\n\t\tBSO_OWNERSHIP as string,\n\t\tPOST_CODE as string,\n\t\tPOBOX as string,\n\t\tCITY_REGION as string,\n\t\tCATEGORY as string,\n\t\tCONFIDENTIAL as string,\n\t\tSOCIAL_MEDIA as string,\n\t\tOTHER_EMAILS as string,\n\t\tOTHER_PHONE_NUMBERS as string,\n\t\tOTHER_INFORMATION as string,\n\t\tMAILING_ADDRESS_STREET1 as string,\n\t\tMAILING_ADDRESS_STREET2 as string,\n\t\tMAILING_ADDRESS_CITY as string,\n\t\tMAILING_STATE_PROVICE as string,\n\t\tMAILING_POST_CODE as string,\n\t\tMAILING_COUNTRY as string,\n\t\tMAILING_FORMAT_UN as string,\n\t\tFIRM_ID as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMENTITY1\nsource(output(\n\t\tENTITY_SR_KEY as integer,\n\t\tENTITY_ID as integer,\n\t\tVERSION_NO as integer,\n\t\tENTITY_NAME as string,\n\t\tENTITY_EMAIL_DOMAIN_NAME as string,\n\t\tADDRESS as string,\n\t\tCITY as string,\n\t\tREGION as string,\n\t\tPHONE_NUMBER as string,\n\t\tWEBSITE as string,\n\t\tTWITTER as string,\n\t\tLINKEDIN as string,\n\t\tBSO_OWNERSHIP as string,\n\t\tPOST_CODE as string,\n\t\tPOBOX as string,\n\t\tCITY_REGION as string,\n\t\tCATEGORY as string,\n\t\tCONFIDENTIAL as string,\n\t\tSOCIAL_MEDIA as string,\n\t\tOTHER_EMAILS as string,\n\t\tOTHER_PHONE_NUMBERS as string,\n\t\tOTHER_INFORMATION as string,\n\t\tMAILING_ADDRESS_STREET1 as string,\n\t\tMAILING_ADDRESS_STREET2 as string,\n\t\tMAILING_ADDRESS_CITY as string,\n\t\tMAILING_STATE_PROVICE as string,\n\t\tMAILING_POST_CODE as string,\n\t\tMAILING_COUNTRY as string,\n\t\tMAILING_FORMAT_UN as string,\n\t\tFIRM_ID as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMENTITY2\nsource(output(\n\t\tPROFESSIONAL_STATUS_SR_KEY as integer,\n\t\tPROFESSIONAL_STATUS_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMPROFESSIONALSTATUS\nsource(output(\n\t\tENTITY_TYPE_SR_KEY as integer,\n\t\tENTITY_TYPE_CODE as string,\n\t\tENTITY_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMENTITYTYPE\nsource(output(\n\t\tENTITY_SUB_TYPE_SR_KEY as integer,\n\t\tENTITY_TYPE_CODE as string,\n\t\tENTITY_TYPE_DESC as string,\n\t\tENTITY_SUB_TYPE_CODE as string,\n\t\tENTITY_SUB_TYPE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMENTITYSUBTYPE\nsource(output(\n\t\tCOUNTRY_SR_KEY as integer,\n\t\tCOUNTRY_CODE as string,\n\t\tCOUNTRY_NAME_EN as string,\n\t\tCOUNTRY_NAME_ES as string,\n\t\tCOUNTRY_NAME_FR as string,\n\t\tISO2_CODE as string,\n\t\tISO3_CODE as string,\n\t\tLEAST_DEVELPED_COUNTRY as string,\n\t\tLAND_LCKD_DEVELOPING_COUNTRY as string,\n\t\tSMALL_ISLAND_DEVELOPING_STATES as string,\n\t\tDEVELOPED_DEVELOPING_COUNTRY as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ENTITYCOUNTRY\nsource(output(\n\t\tENTITY_SIZE_GROUP_SR_KEY as integer,\n\t\tENTITY_SIZE_GROUP_CODE as string,\n\t\tENTITY_SIZE_GROUP_DESC as string,\n\t\tLOWER_SZIE_LIMIT as integer,\n\t\tHIGHER_SIZE_LIMIT as integer,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMENTITYSIZEGROUP\nsource(output(\n\t\tCOURSE_SR_KEY as integer,\n\t\tCOURSE_NAME as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMCOURSE\nsource(output(\n\t\tAREA_OF_CHANGE_SR_KEY as integer,\n\t\tAREA_OF_CHANGE_CODE as string,\n\t\tAREA_OF_CHANGE_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMAREAOFCHANGE\nsource(output(\n\t\tSERVICE_THEME_SR_KEY as integer,\n\t\tSERVICE_THERE_CODE as string,\n\t\tSERVICE_THEME_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMSERVICETHEME01\nsource(output(\n\t\tSERVICE_THEME_SR_KEY as integer,\n\t\tSERVICE_THERE_CODE as string,\n\t\tSERVICE_THEME_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMSERVICETHEME02\nsource(output(\n\t\tHS_CODE_SR_KEY as integer,\n\t\tORDER as string,\n\t\tLEVEL as string,\n\t\tCODE1 as string,\n\t\tPARENT1 as string,\n\t\tCODE2 as string,\n\t\tPARENT2 as string,\n\t\tDESCRIPTION as string,\n\t\tSELF_EXPLANATORY_TEXTS as string,\n\t\tHS_SECTION as string,\n\t\tHS_CHAPTER as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMHSCODES\nsource(output(\n\t\tINT_STD_INDUSTRY_CODES_ISIC_SR_KEY as integer,\n\t\tISIC_SECTION as string,\n\t\tISIC_DIVISION as string,\n\t\tISIC_GROUP as string,\n\t\tISIC_CLASS as string,\n\t\tISIC_DESC as string,\n\t\tISIC_CODE as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMINTSTDINDUSTRYCODESISIC\nsource(output(\n\t\tGENDER_SR_KEY as integer,\n\t\tGENDER_CODE as string,\n\t\tGENDER_DESC as string,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMTOPMANAGERGENDER\nsource(output(\n\t\tAGE_GROUP_SR_KEY as integer,\n\t\tAGE_GROUP_CODE as string,\n\t\tAGE_GROUP_DESC as string,\n\t\tLOWER_AGE_LIMIT as integer,\n\t\tHIGHER_AGE_LIMIT as integer,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TOPMANAGERAGEGROUP\nsource(output(\n\t\tAGE_GROUP_SR_KEY as integer,\n\t\tAGE_GROUP_CODE as string,\n\t\tAGE_GROUP_DESC as string,\n\t\tLOWER_AGE_LIMIT as integer,\n\t\tHIGHER_AGE_LIMIT as integer,\n\t\tBATCH_ID as integer,\n\t\tSOURCE as string,\n\t\tCREATED_BY as string,\n\t\tUPDATED_BY as string,\n\t\tDATE_CREATED as timestamp,\n\t\tDATE_UPDATED as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMAGEGROUP\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CERTIFICATIONDAET\nsource(output(\n\t\tDATE_SR_KEY as integer,\n\t\tDATE_TIME as date,\n\t\tDAY_OF_MONTH as integer,\n\t\tCALENDER_MONTH_NAME as string,\n\t\tCALENDER_MONTH_ID as integer,\n\t\tCALENDER_YEAR as integer,\n\t\tCALENDER_QUARTER_ID as integer,\n\t\tCALENDER_QUARTER_NAME as string,\n\t\tCALENDER_HALF_YEAR_ID as integer,\n\t\tCALENDER_HALF_YEAR_NAME as string,\n\t\tFISCAL_MONTH_ID as integer,\n\t\tFISCAL_MONTH_NAME as string,\n\t\tFISCAL_QUARTER_ID as integer,\n\t\tFISCAL_QUARTER_NAME as string,\n\t\tFISCAL_HALF_YEAR_ID as integer,\n\t\tFISCAL_HALF_YEAR_NAME as string,\n\t\tFISCAL_YEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ENROLLDATE\nDIMPROJECT select(mapColumn(\n\t\tPROJECT_SR_KEY,\n\t\tPROJECT_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMPROJECT01\nDIMCONTEXTSUBTYPE select(mapColumn(\n\t\tCONTEXT_SUB_TYPE_SR_KEY,\n\t\tCONTEXT_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMCONTEXTSUBTYPE01\nDIMEVENTTYPE select(mapColumn(\n\t\tEVENT_TYPE_SR_KEY,\n\t\tEVENT_TYPE_CODE,\n\t\tEVENT_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMEVENTTYPE01\nSelectReqCol derive(ProjectID = case(isNull(ProjectID)==false(),\r\n     ProjectID,\r\n     isNull({Project Number})==false(),\r\n     {Project Number},\r\n     'N/A'),\n\t\t{Type of event} = case(isNull({Type of event})==false(),\r\n     {Type of event},\r\n     isNull({Event type})==false(),\r\n     {Event type},\r\n     instr(FILE_NAME, 'Contact') > 0 && trim({Event type})=='ITC-Corporate',\r\n     'ITC corporate event',\r\n     'N/A'),\n\t\t{Type of platform} = case(isNull({Type of platform})==false(),\r\n     {Type of platform},\r\n     isNull({Type of tool})==false(),\r\n     {Type of tool},\r\n     instr(FILE_NAME, 'Contact') > 0 && isNull(SheTrades)==false(),\r\n     'SheTrades',\r\n     instr(FILE_NAME, 'Contact') > 0 && isNull({SME Trade Academy})==false(),\r\n     'SME Trade Academy',\r\n     'N/A'),\n\t\tPARTICIPANT_ID = case(isNull(Email)==false(),\r\n     Email,\r\n     concat({First name}, {Last name},Gender,{Year of birth})\r\n     ),\n\t\t{Date of data collection New} = case(isNull({Date of data collection})==false(),\r\n     {Date of data collection},\r\n     isNull({Registration Date})==false(),          \r\n{Registration Date},\r\n     ''),\n\t\t{Country of Residence} = case(instr(FILE_NAME, 'WEDF 2018') > 0, \r\n{Country of Residence}, \r\nCountry\r\n),\n\t\t{Date of birth} = case(isNull({Date of birth})==false(),\r\n     {Date of birth},\r\n     isNull({Date of birth2})==false(),\r\n     {Date of birth2},\r\n     ''),\n\t\tENTITY_NAME = case(isNull({Organization/ Company name})==false(),\r\n     {Organization/ Company name},\r\n     isNull({Name of the entity})==false(),\r\n     {Name of the entity},\r\n     isNull(Account)==false(),\r\n     Account,\r\n     isNull({Account Name})==false(),\r\n     Account,\r\n     ''),\n\t\t{Type of entity} = case(isNull({Type of entity})==false(),\r\n     {Type of entity},\r\n     isNull({Account Type})==false(),\r\n     {Account Type},\r\n     'N/A'),\n\t\t{Sub-type of entity} = case(isNull({Sub-type of entity})==false(),\r\n      {Sub-type of entity},\r\n     isNull({Account Sub-Type})==false(),\r\n     {Sub-type of entity},\r\n     'N/A'),\n\t\tENTITY_COUNTRY = case(isNull(Country)==false(),\r\n    Country,\r\n     isNull({Office Address: Country})==false(),          \r\n     {Office Address: Country},\r\n     ''),\n\t\t{Service theme 1} = case(isNull({Service themes})==false(),\r\n    {Service themes},\r\n     isNull({Service theme 1})==false(),          \r\n     {Service theme 1},\r\n     ''),\n\t\tHS_CODE = case(isNull(HS)==false(),\r\n    HS,\r\n     isNull({HS 6 digit code (if available)})==false(),          \r\n     {HS 6 digit code (if available)},\r\n     ''),\n\t\tISIC_CODE = case(isNull(ISIC)==false(),\r\n    ISIC,\r\n     isNull({ISIC code division})==false(),          \r\n     {ISIC code division},\r\n     ''),\n\t\tAGE_GROUP = case(isNull({Date of data collection})==false(),\r\n           minus(year(toDate({Date of data collection}, 'MM/dd/yyyy')),toInteger({Year of birth})),\r\n     isNull({Registration Date})==false(),          \r\n           minus(year(toDate({Registration Date}, 'MM/dd/yyyy')),toInteger({Year of birth})),\r\n     0),\n\t\tYOUTH_MANAGED_FLAG = case(isNull({Youth Managed})== false(),\r\n        (case(upper({Youth Managed})=='YES',\r\n         'Y',\r\n        upper({Youth Managed})=='NO',\r\n         'N')\r\n         ),\r\n      isNull({Owner/ top manager age})== false(),\r\n        (case(toInteger({Owner/ top manager age}) <= 35,\r\n         'Y',\r\n         'N')\r\n         ),  \r\n     '-1'),\n\t\tWOMAN_MANAGED_FLAG = case(isNull({Owner/ top manager gender})== false(),\r\n        (case(upper({Owner/ top manager gender})=='WOMAN',\r\n         'Y',\r\n         'N')\r\n         ),\r\n      isNull({Women Managed})== false(),\r\n        (case(upper({Women Managed})=='YES',\r\n         'Y',\r\n         'N')\r\n         ),  \r\n     '-1')) ~> DerivedFACTCol\nSrcAll select(mapColumn(\n\t\tProjectID,\n\t\tContext,\n\t\t{Project Number},\n\t\t{Event type},\n\t\t{Type of event},\n\t\t{Type of training},\n\t\t{Type of platform},\n\t\t{Type of tool},\n\t\tSheTrades,\n\t\t{SME Trade Academy},\n\t\tFILE_NAME,\n\t\tEmail,\n\t\t{First name},\n\t\t{Last name},\n\t\tGender,\n\t\t{Year of birth},\n\t\t{Date of data collection},\n\t\t{Registration Date},\n\t\t{Submission Date},\n\t\t{Date of birth},\n\t\t{Date of birth2},\n\t\tCountry,\n\t\t{Country of Residence},\n\t\t{Organization/ Company name},\n\t\t{Name of the entity},\n\t\t{Account Name},\n\t\tAccount,\n\t\t{Professional status},\n\t\t{Type of entity},\n\t\t{Account Type},\n\t\t{Sub-type of entity},\n\t\t{Account Sub-Type},\n\t\tCountry,\n\t\t{Office Address: Country},\n\t\tSize,\n\t\tCourse_name,\n\t\t{Area of change},\n\t\t{Service themes},\n\t\t{Service theme 1},\n\t\t{Service theme 2},\n\t\tHS,\n\t\t{HS 6 digit code (if available)},\n\t\t{ISIC code division},\n\t\tISIC,\n\t\t{Owner/ top manager gender},\n\t\t{Owner/ top manager age},\n\t\tCertification_date,\n\t\tCERTIFIED_FLAG = Certified,\n\t\tEnrol_time,\n\t\t{Youth Managed},\n\t\t{Women Managed}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectReqCol\nDerivedFACTCol, DIMPROJECT01 lookup(upper(trim(ProjectID)) == upper(trim(PROJECT_ID)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpPROJECT\nLkpPROJECT, DIMCONTEXTSUBTYPE01 lookup(upper(trim(Context)) == upper(trim(CONTEXT_TYPE_DESC)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpCONTEXT\nLkpCONTEXT, DIMEVENTTYPE01 lookup(upper(trim({Type of event})) == upper(trim(EVENT_TYPE_DESC)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpEVENTTYPE\nDIMTRAININGTYPE select(mapColumn(\n\t\tTRAINING_TYPE_SR_KEY,\n\t\tTRAINING_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMTRAININGTYPE01\nLkpEVENTTYPE, DIMTRAININGTYPE01 lookup(upper(trim({Type of training})) == upper(trim(TRAINING_TYPE_DESC)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpTRAININGTYPE\nDIMPLATFORMTYPE select(mapColumn(\n\t\tPLATFORM_TYPE_SR_KEY,\n\t\tPLATFORM_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMPLATFORMTYPE01\nLkpTRAININGTYPE, DIMPLATFORMTYPE01 lookup(upper(trim({Type of platform})) == upper(trim(PLATFORM_TYPE_DESC)),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpPLATFORMTYPE\nDIMPARTICIPANT01 aggregate(groupBy(PARTICIPANT_ID),\n\tVERSION_NO = max(VERSION_NO)) ~> LatestVersionPARTICIPANT\nDIMPARTICIPANT, LatestVersionPARTICIPANT join(DIMPARTICIPANT@PARTICIPANT_ID == LatestVersionPARTICIPANT@PARTICIPANT_ID\n\t&& DIMPARTICIPANT@VERSION_NO == LatestVersionPARTICIPANT@VERSION_NO,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(PARTICIPANT_ID = case(isNull(EMAIL)==false(),\r\n     EMAIL,\r\n     concat(FIRST_NAME, LAST_NAME,GENDER,toString(YEAR_OF_BIRTH))\r\n     )) ~> DIMPARTICIPANTID\nLkpPLATFORMTYPE, DIMPARTICIPANTSelect lookup(DerivedFACTCol@PARTICIPANT_ID == DIMPARTICIPANTSelect@PARTICIPANT_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpPARTICIPANT\nDIMDATE01 select(mapColumn(\n\t\tDATE_COLLECTION_DATE_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DATECOLLECTIONDATE\nLkpPARTICIPANT, DATECOLLECTIONDATE lookup(toString(toDate({Date of data collection New},'MM/dd/YYYY HH:mm:ss'), 'MM/dd/YYYY') == toString(DATE_TIME, 'MM/dd/YYYY'),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDATECOLLECTIONDATE\nDIMDATE02 select(mapColumn(\n\t\tSUBMISSON_DATE_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DATESUBMISSON\nLkpDATECOLLECTIONDATE, DATESUBMISSON lookup(toString(toDate({Submission Date},'MM/dd/YYYY HH:mm:ss'), 'MM/dd/YYYY')\r\n\r\n\r\n == toString(DATESUBMISSON@DATE_TIME, 'MM/dd/YYYY')\r\n\r\n,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDATESUBMISSON\nDIMPARTICIPANTID select(mapColumn(\n\t\tPARTICIPANT_SR_KEY,\n\t\tPARTICIPANT_ID,\n\t\tVERSION_NO = LatestVersionPARTICIPANT@VERSION_NO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMPARTICIPANTSelect\nDIMGENDER select(mapColumn(\n\t\tGENDER_SR_KEY,\n\t\tGENDER_CODE,\n\t\tGENDER_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMGENDER01\nLkpDATESUBMISSON, DIMGENDER01 lookup(Gender == GENDER_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpGENDER\nDATEOFBIRTHYEAR select(mapColumn(\n\t\tDATE_OF_BIRTH_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DATEOFBIRTHYEAR01\nLkpGENDER, DATEOFBIRTHYEAR01 lookup(concat('01/01/',toString({Year of birth})) == toString(DATEOFBIRTHYEAR01@DATE_TIME,'MM/dd/YYYY'),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDATEOFBIRTH\nDATEOFBIRTH2 select(mapColumn(\n\t\tDATE_OF_BIRTH2_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DATEOFBIRTH201\nLkpDATEOFBIRTH, DATEOFBIRTH201 lookup(toString(toDate({Date of birth},'MM/dd/YYYY HH:mm:ss'), 'MM/dd/YYYY') == toString(DATEOFBIRTH201@DATE_TIME, 'MM/dd/yyyy'),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDATEOFBIRTH2\nLkpDATEOFBIRTH2, PARTICIPANTHOMECOUNTRY01 lookup({Country of Residence} == COUNTRY_NAME_EN,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpPARTICIPANTHOMECOUNTRY\nPARTICIPANTHOMECOUNTRY select(mapColumn(\n\t\tPARTICIPANT_HOME_COUNTRY_SR_KEY = COUNTRY_SR_KEY,\n\t\tCOUNTRY_CODE,\n\t\tCOUNTRY_NAME_EN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PARTICIPANTHOMECOUNTRY01\nDIMENTITY2 aggregate(groupBy(ENTITY_ID),\n\tVERSION_NO = max(VERSION_NO)) ~> LatestVersionENTITY\nDIMENTITY1, LatestVersionENTITY join(DIMENTITY1@ENTITY_ID == LatestVersionENTITY@ENTITY_ID\n\t&& DIMENTITY1@VERSION_NO == LatestVersionENTITY@VERSION_NO,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tENTITY_SR_KEY,\n\t\tENTITY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMENTITYSelect\nLkpPARTICIPANTHOMECOUNTRY, DIMENTITYSelect lookup(DerivedFACTCol@ENTITY_NAME == DIMENTITYSelect@ENTITY_NAME,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpENTITY\nDIMPROFESSIONALSTATUS select(mapColumn(\n\t\tPROFESSIONAL_STATUS_SR_KEY,\n\t\tPROFESSIONAL_STATUS_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMPROFESSIONALSTATUSSelect\nLkpENTITY, DIMPROFESSIONALSTATUSSelect lookup({Professional status} == PROFESSIONAL_STATUS_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpPROFESSIONALSTATUS\nDIMENTITYTYPE select(mapColumn(\n\t\tENTITY_TYPE_SR_KEY,\n\t\tENTITY_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMENTITYTYPESelect\nLkpPROFESSIONALSTATUS, DIMENTITYTYPESelect lookup({Type of entity} == ENTITY_TYPE_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDIMENTITYTYPE\nLkpDIMENTITYTYPE, DIMENTITYSUBTYPE01 lookup({Sub-type of entity} == ENTITY_SUB_TYPE_DESC\n\t&& {Type of entity} == DIMENTITYSUBTYPE01@ENTITY_TYPE_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpDIMENTITYSUBTYPE\nDIMENTITYSUBTYPE select(mapColumn(\n\t\tENTITY_SUB_TYPE_SR_KEY,\n\t\tENTITY_TYPE_DESC,\n\t\tENTITY_SUB_TYPE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMENTITYSUBTYPE01\nENTITYCOUNTRY select(mapColumn(\n\t\tENTITY_COUNTRY_SR_KEY = COUNTRY_SR_KEY,\n\t\tCOUNTRY_NAME_EN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ENTITYCOUNTRYSelect\nDIMENTITYSIZEGROUP select(mapColumn(\n\t\tENTITY_SIZE_GROUP_SR_KEY,\n\t\tLOWER_SZIE_LIMIT,\n\t\tHIGHER_SIZE_LIMIT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ENTITYSIZEGROUPSelect\nLkpDIMENTITYSUBTYPE, ENTITYSIZEGROUPSelect lookup(toInteger(Size) >= LOWER_SZIE_LIMIT\n\t&& toInteger(Size) <= HIGHER_SIZE_LIMIT,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'both')~> LkpENTITYSIZEGROUP\nLkpENTITYSIZEGROUP, DIMCOURSESelect lookup(SelectReqCol@Course_name == DIMCOURSESelect@COURSE_NAME,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpCOURSE\nDIMCOURSE select(mapColumn(\n\t\tCOURSE_SR_KEY,\n\t\tCOURSE_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMCOURSESelect\nLkpCOURSE, DIMAREAOFCHANGESelect lookup({Area of change} == AREA_OF_CHANGE_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpAREAOFCHANGE\nDIMAREAOFCHANGE select(mapColumn(\n\t\tAREA_OF_CHANGE_SR_KEY,\n\t\tAREA_OF_CHANGE_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMAREAOFCHANGESelect\nDIMSERVICETHEME01 select(mapColumn(\n\t\tSERVICE_THEME1_SR_KEY = SERVICE_THEME_SR_KEY,\n\t\tSERVICE_THEME_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMSERVICETHEME0Select\nDIMSERVICETHEME02 select(mapColumn(\n\t\tSERVICE_THEME2_SR_KEY = SERVICE_THEME_SR_KEY,\n\t\tSERVICE_THEME_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMSERVICETHEME02Select\nLkpAREAOFCHANGE, DIMSERVICETHEME0Select lookup({Service themes} == SERVICE_THEME_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpSERVICETHEME01\nLkpSERVICETHEME01, DIMSERVICETHEME02Select lookup({Service theme 2} == DIMSERVICETHEME02Select@SERVICE_THEME_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpSERVICETHEME02\nLkpSERVICETHEME02, DIMHSCODESSelect lookup(DerivedFACTCol@HS_CODE == DIMHSCODESSelect@HS_CODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpHSCode\nDIMHSCODES select(mapColumn(\n\t\tHS_CODE_SR_KEY,\n\t\tHS_CODE = CODE2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMHSCODESSelect\nLkpHSCode, DIMINTSTDINDUSTRYCODESISICSelect lookup(DerivedFACTCol@ISIC_CODE == DIMINTSTDINDUSTRYCODESISICSelect@ISIC_CODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpISICCODE\nDIMINTSTDINDUSTRYCODESISIC select(mapColumn(\n\t\tINT_STD_INDUSTRY_CODES_ISIC_SR_KEY,\n\t\tISIC_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMINTSTDINDUSTRYCODESISICSelect\nDIMTOPMANAGERGENDER select(mapColumn(\n\t\tTOP_MANAGER_GENDER_SR_KEY = GENDER_SR_KEY,\n\t\tGENDER_DESC\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMTOPMANAGERGENDERSelect\nTOPMANAGERAGEGROUP select(mapColumn(\n\t\tTOP_MANAGER_AGE_GROUP_KEY = AGE_GROUP_SR_KEY,\n\t\tLOWER_AGE_LIMIT,\n\t\tHIGHER_AGE_LIMIT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TOPMANAGERAGEGROUPSelect\nDIMAGEGROUP select(mapColumn(\n\t\tAGE_GROUP_SR_KEY,\n\t\tLOWER_AGE_LIMIT,\n\t\tHIGHER_AGE_LIMIT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DIMAGEGROUPSelect\nCERTIFICATIONDAET select(mapColumn(\n\t\tCERTIFICATION_DATE_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CERTIFICATIONDATESelect\nENROLLDATE select(mapColumn(\n\t\tENROLL_DATE_SR_KEY = DATE_SR_KEY,\n\t\tDATE_TIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ENROLLDATESelect\nLkpISICCODE, DIMTOPMANAGERGENDERSelect lookup({Owner/ top manager gender} == DIMTOPMANAGERGENDERSelect@GENDER_DESC,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpTOPMANAGERGENDER\nLkpTOPMANAGERGENDER, TOPMANAGERAGEGROUPSelect lookup(toInteger({Owner/ top manager age}) >= LOWER_AGE_LIMIT\n\t&& toInteger({Owner/ top manager age}) <= HIGHER_AGE_LIMIT,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'both')~> LkpTOPMANAGERAGEGROUP\nLkpTOPMANAGERAGEGROUP, DIMAGEGROUPSelect lookup(AGE_GROUP >= DIMAGEGROUPSelect@LOWER_AGE_LIMIT\n\t&& AGE_GROUP <= DIMAGEGROUPSelect@HIGHER_AGE_LIMIT,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'both')~> lkpAGEGROUP\nlkpAGEGROUP, CERTIFICATIONDATESelect lookup(toString(toDate(Certification_date,'MM/dd/YYYY'),'MM/dd/YYYY') == toString(CERTIFICATIONDATESelect@DATE_TIME,'MM/dd/YYYY'),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpCERTIFICATIONDATE\nLkpCERTIFICATIONDATE, ENROLLDATESelect lookup(toString(toDate(Enrol_time,'MM/dd/YYYY'),'MM/dd/YYYY') == toString(ENROLLDATESelect@DATE_TIME,'MM/dd/YYYY'),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpENROLLDATE\nLkpENROLLDATE select(mapColumn(\n\t\tYOUTH_MANAGED_FLAG,\n\t\tWOMAN_MANAGED_FLAG,\n\t\tPROJECT_SR_KEY,\n\t\tCONTEXT_SUB_TYPE_SR_KEY,\n\t\tEVENT_TYPE_SR_KEY,\n\t\tTRAINING_TYPE_SR_KEY,\n\t\tPLATFORM_TYPE_SR_KEY,\n\t\tPARTICIPANT_SR_KEY,\n\t\tDATE_COLLECTION_DATE_SR_KEY,\n\t\tSUBMISSON_DATE_SR_KEY,\n\t\tGENDER_SR_KEY,\n\t\tDATE_OF_BIRTH_SR_KEY,\n\t\tDATE_OF_BIRTH2_SR_KEY,\n\t\tPARTICIPANT_HOME_COUNTRY_SR_KEY,\n\t\tENTITY_SR_KEY,\n\t\tPROFESSIONAL_STATUS_SR_KEY,\n\t\tENTITY_TYPE_SR_KEY,\n\t\tENTITY_SUB_TYPE_SR_KEY,\n\t\tENTITY_SIZE_GROUP_SR_KEY,\n\t\tCOURSE_SR_KEY,\n\t\tAREA_OF_CHANGE_SR_KEY,\n\t\tSERVICE_THEME1_SR_KEY,\n\t\tSERVICE_THEME2_SR_KEY,\n\t\tHS_CODE_SR_KEY,\n\t\tINT_STD_INDUSTRY_CODES_ISIC_SR_KEY,\n\t\tTOP_MANAGER_GENDER_SR_KEY,\n\t\tTOP_MANAGER_AGE_GROUP_KEY,\n\t\tAGE_GROUP_SR_KEY,\n\t\tCERTIFICATION_DATE_SR_KEY,\n\t\tENROLL_DATE_SR_KEY,\n\t\tCertified = CERTIFIED_FLAG\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\t{ProjectID|Context|FirmID|Date of data collection|Country|interviewkey|interviewid|A01|A02|A03|A04|A06|A07|A09|A10|A11|A12|A13|B01|B03|B17|BA03|BA04|BA07|BA08|BA11|BA12|BA13|BA14|BA15|BB02|BB08|BB09|BC03|BC04|C04|C05|DA01|DB01|DB02|DB03|FILE_NAME|LOAD_TIMESTAMP} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}